#!/usr/bin/env python3
"""
Script de diagn√≥stico para verificar a configura√ß√£o do Supabase
"""

import os
import sys
from dotenv import load_dotenv

def verificar_configuracao():
    """Verifica se a configura√ß√£o do Supabase est√° correta"""
    
    print("üîç DIAGN√ìSTICO DA CONFIGURA√á√ÉO DO SUPABASE")
    print("=" * 50)
    
    # Carregar vari√°veis de ambiente
    load_dotenv()
    
    # Verificar arquivo .env
    env_path = '.env'
    if os.path.exists(env_path):
        print(f"‚úÖ Arquivo {env_path} encontrado")
    else:
        print(f"‚ùå Arquivo {env_path} n√£o encontrado!")
        return False
    
    # Verificar vari√°veis do Supabase
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_KEY')
    
    print(f"\nüìã VARI√ÅVEIS DE AMBIENTE:")
    print(f"   SUPABASE_URL: {supabase_url}")
    print(f"   SUPABASE_KEY: {'*' * 20 if supabase_key else 'N√£o definida'}")
    
    # Verificar se as vari√°veis est√£o definidas
    if not supabase_url:
        print("‚ùå SUPABASE_URL n√£o est√° definida!")
        return False
    
    if not supabase_key:
        print("‚ùå SUPABASE_KEY n√£o est√° definida!")
        return False
    
    # Verificar se as vari√°veis n√£o s√£o os valores padr√£o
    if supabase_url == 'your_supabase_url_here':
        print("‚ùå SUPABASE_URL ainda tem o valor padr√£o!")
        print("   Configure com a URL real do seu projeto Supabase")
        return False
    
    if supabase_key == 'your_supabase_anon_key_here':
        print("‚ùå SUPABASE_KEY ainda tem o valor padr√£o!")
        print("   Configure com a chave anon/public do seu projeto Supabase")
        return False
    
    # Verificar formato da URL
    if not supabase_url.startswith('https://'):
        print("‚ùå SUPABASE_URL deve come√ßar com 'https://'")
        return False
    
    if not '.supabase.co' in supabase_url:
        print("‚ùå SUPABASE_URL deve conter '.supabase.co'")
        return False
    
    print("‚úÖ Vari√°veis de ambiente configuradas corretamente")
    
    # Testar conex√£o com Supabase
    print(f"\nüîó TESTANDO CONEX√ÉO COM SUPABASE:")
    try:
        from supabase import create_client
        client = create_client(supabase_url, supabase_key)
        print("‚úÖ Cliente Supabase criado com sucesso")
        
        # Testar uma consulta simples
        try:
            # Tentar listar tabelas (isso pode falhar se n√£o houver tabelas)
            response = client.table('users').select('count').execute()
            print("‚úÖ Conex√£o com Supabase funcionando")
            print(f"   Tabela 'users' encontrada")
        except Exception as e:
            if 'relation "public.users" does not exist' in str(e):
                print("‚ö†Ô∏è  Tabela 'users' n√£o existe ainda")
                print("   Execute o script SQL para criar a tabela")
            else:
                print(f"‚ö†Ô∏è  Erro ao consultar tabela: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao conectar com Supabase: {e}")
        return False

def mostrar_solucoes():
    """Mostra solu√ß√µes para problemas comuns"""
    
    print(f"\nüõ†Ô∏è  SOLU√á√ïES PARA PROBLEMAS COMUNS:")
    print("-" * 40)
    
    print("1Ô∏è‚É£  Se SUPABASE_URL ou SUPABASE_KEY n√£o est√£o configuradas:")
    print("   - Acesse https://supabase.com")
    print("   - Fa√ßa login e acesse seu projeto")
    print("   - V√° em Settings > API")
    print("   - Copie a URL e a anon/public key")
    print("   - Atualize o arquivo .env")
    print()
    
    print("2Ô∏è‚É£  Se a tabela 'users' n√£o existe:")
    print("   - Execute o arquivo SUPABASE_SETUP.sql ou SUPABASE_SIMPLES.sql")
    print("   - No Supabase Dashboard > SQL Editor")
    print("   - Cole o conte√∫do do arquivo e execute")
    print()
    
    print("3Ô∏è‚É£  Se h√° erro de URL inv√°lida:")
    print("   - Verifique se a URL est√° no formato:")
    print("   - https://seu-projeto.supabase.co")
    print("   - Sem barras extras no final")
    print()
    
    print("4Ô∏è‚É£  Se h√° erro de autentica√ß√£o:")
    print("   - Verifique se a chave √© a 'anon/public' key")
    print("   - N√£o use a 'service_role' key para o frontend")
    print()

def main():
    """Fun√ß√£o principal"""
    
    sucesso = verificar_configuracao()
    
    if sucesso:
        print(f"\nüéâ CONFIGURA√á√ÉO OK!")
        print("   Sua aplica√ß√£o deve funcionar corretamente")
        print("   Execute: python src/app.py")
    else:
        print(f"\n‚ùå PROBLEMAS ENCONTRADOS!")
        mostrar_solucoes()
    
    print(f"\n" + "=" * 50)

if __name__ == "__main__":
    main()